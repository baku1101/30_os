     1 00000000                                 ; ipl
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4  = 0000000A                              CYLS	EQU		10				; どこまで読み込むか
     5 00000000                                 
     6                                          		ORG		0x7c00			; このプログラムがどこに読み込まれるのか(スタックポインタにこれが入る?)
     7 00007C00                                 								; ブートセクタの領域がどこから読み出されるかは決まっている(0番地とか0xf0000付近はBIOSが使用)
     8 00007C00                                 								; http://oswiki.osask.jp/?%28AT%29memorymap を参照
     9 00007C00                                 
    10 00007C00                                 ; 以下は標準的なFAT12フォーマットフロッピーディスクのための記述
    11 00007C00                                 
    12 00007C00 EB 4E                           		JMP		entry			; JMP 0x7c50と同義．entryのようなラベルはアドレスを指す
    13 00007C02 90                              		DB		0x90
    14 00007C03 48 41 52 49 42 4F 54 45         		DB		"HARIBOTE"		; ブートセクタの名前を自由に書いてよい（8バイト）
    15 00007C0B 0200                            		DW		512				; 1セクタの大きさ（512にしなければいけない）
    16 00007C0D 01                              		DB		1				; クラスタの大きさ（1セクタにしなければいけない）
    17 00007C0E 0001                            		DW		1				; FATがどこから始まるか（普通は1セクタ目からにする）
    18 00007C10 02                              		DB		2				; FATの個数（2にしなければいけない）
    19 00007C11 00E0                            		DW		224				; ルートディレクトリ領域の大きさ（普通は224エントリにする）
    20 00007C13 0B40                            		DW		2880			; このドライブの大きさ（2880セクタにしなければいけない）
    21 00007C15 F0                              		DB		0xf0			; メディアのタイプ（0xf0にしなければいけない）
    22 00007C16 0009                            		DW		9				; FAT領域の長さ（9セクタにしなければいけない）
    23 00007C18 0012                            		DW		18				; 1トラックにいくつのセクタがあるか（18にしなければいけない）
    24 00007C1A 0002                            		DW		2				; ヘッドの数（2にしなければいけない）
    25 00007C1C 00000000                        		DD		0				; パーティションを使ってないのでここは必ず0
    26 00007C20 00000B40                        		DD		2880			; このドライブ大きさをもう一度書く
    27 00007C24 00 00 29                        		DB		0,0,0x29		; よくわからないけどこの値にしておくといいらしい
    28 00007C27 FFFFFFFF                        		DD		0xffffffff		; たぶんボリュームシリアル番号
    29 00007C2B 48 41 52 49 42 4F 54 45 4F 53   		DB		"HARIBOTEOS "	; ディスクの名前（11バイト）
       00007C35 20 
    30 00007C36 46 41 54 31 32 20 20 20         		DB		"FAT12   "		; フォーマットの名前（8バイト）
    31 00007C3E 00 00 00 00 00 00 00 00 00 00   		RESB	18				; とりあえず18バイトあけておく
       00007C48 00 00 00 00 00 00 00 00 
    32 00007C50                                 
    33 00007C50                                 ; プログラム本体
    34 00007C50                                 
    35 00007C50                                 entry:
    36 00007C50 B8 0000                         		MOV		AX,0			; レジスタ初期化(AX:16bit(2byte) register)
    37 00007C53 8E D0                           		MOV		SS,AX			; SS:スタックセグメント,0で初期化
    38 00007C55 BC 7C00                         		MOV		SP,0x7c00		; SP:スタックポインタ,ORGの値で初期化
    39 00007C58 8E D8                           		MOV		DS,AX			; DS:データセグメント,0で初期化
    40 00007C5A                                 
    41 00007C5A                                 ; ディスクを読む
    42 00007C5A                                 	; ディスク読み込みに必要なデータのセット
    43 00007C5A B8 0820                         		MOV		AX,0x0820
    44 00007C5D 8E C0                           		MOV		ES,AX			; ES,BXを合わせた32bitでメモリ上のどこに読み込むかを指定
    45 00007C5F                                 								; アドレス: ES*16 + BX
    46 00007C5F B5 00                           		MOV		CH,0			; シリンダ0 (フロッピーのどこから読むか)
    47 00007C61 B6 00                           		MOV		DH,0			; ヘッド0 (フロッピーの裏表どちらを読むか)
    48 00007C63 B1 02                           		MOV		CL,2			; セクタ2 (シリンダ内のどのセクタ(512byte)を読み出すか)
    49 00007C65                                 
    50 00007C65                                 readloop:
    51 00007C65 BE 0000                         		MOV		SI,0			; 失敗回数を数えるレジスタ
    52 00007C68                                 
    53 00007C68                                 retry:
    54 00007C68 B4 02                           		MOV		AH,0x02			; AH=0x02 : ディスク読み込み
    55 00007C6A B0 01                           		MOV		AL,1			; 1セクタ
    56 00007C6C BB 0000                         		MOV		BX,0
    57 00007C6F B2 00                           		MOV		DL,0x00			; Aドライブ(ドライブ番号:0)
    58 00007C71                                 	; ディスク読み込み
    59 00007C71 CD 13                           		INT		0x13			; ディスクBIOS呼び出し
    60 00007C73                                 								; INT = 0x13の時，AH = 0x02ならばディスク読み込み
    61 00007C73                                 								; 戻り値でCF(carry flag) = 1 ならエラー
    62 00007C73                                 	;	JC		error			; JC:jump if carry,エラーならerrorラベルに飛ぶ
    63 00007C73 73 10                           		JNC		next			; jump if not carry
    64 00007C75 83 C6 01                        		ADD 	SI,1			; SI++
    65 00007C78 83 FE 05                        		CMP 	SI,5			; SI == 5 ?
    66 00007C7B 73 32                           		JAE		error 			; jump if above or equal SI >= 5 だったらerrorに飛ぶ
    67 00007C7D B4 00                           		MOV 	AH,0x00
    68 00007C7F B2 00                           		MOV 	DL,0x00
    69 00007C81 CD 13                           		INT 	0x13 			; ドライブのリセット (AH=0,DL=0でシステムのリセット)
    70 00007C83 EB E3                           		JMP 	retry
    71 00007C85                                 
    72 00007C85                                 next:
    73 00007C85 8C C0                           		MOV 	AX,ES 			; アドレスを0x200(512:1セクタ)進める
    74 00007C87 05 0020                         		ADD 	AX,0x0020
    75 00007C8A 8E C0                           		MOV 	ES,AX 			; add ES,0x020がないからこう書いている
    76 00007C8C 80 C1 01                        		ADD 	CL,1			; CL++
    77 00007C8F 80 F9 12                        		CMP 	CL,18
    78 00007C92 76 D1                           		JBE		readloop 		; jump if below or equal CL <= 18 だったらreadloopに飛ぶ(18セクタまでループ)
    79 00007C94 B1 01                           		MOV 	CL,1
    80 00007C96 80 C6 01                        		ADD 	DH,1
    81 00007C99 80 FE 02                        		CMP 	DH,2
    82 00007C9C 72 C7                           		JB 		readloop 		; DH < 2だったらreadloopに飛ぶ
    83 00007C9E B6 00                           		MOV 	DH,0
    84 00007CA0 80 C5 01                        		ADD 	CH,1
    85 00007CA3 80 FD 0A                        		CMP 	CH,CYLS
    86 00007CA6 72 BD                           		JB 		readloop 		; CH < CYLS(総シリンダー数)だったらreadloopに飛ぶ
    87 00007CA8                                 
    88 00007CA8                                 ; ブートセクタを読み切ったからOS部分の起動をする
    89 00007CA8 88 2E 0FF0                      		MOV		[0x0ff0],CH		; IPLがどこまで読んだのかをメモ
    90 00007CAC E9 4551                         		JMP		0xc200
    91 00007CAF                                 
    92 00007CAF                                 ; ここからはエラー処理
    93 00007CAF                                 error:
    94 00007CAF BE 7CC7                         		MOV		SI,msg
    95 00007CB2                                 putloop:
    96 00007CB2 8A 04                           		MOV		AL,[SI]			; []がつくと'メモリ'の意味になる(SI番地の値を読み出す(\n,\n,...)
    97 00007CB4                                 								; 本当はBYTE[SI]とする必要があるが，ALが1byteだから暗黙的にそう解釈される
    98 00007CB4 83 C6 01                        		ADD		SI,1			; SIに1を足す(次の番地へ,)
    99 00007CB7 3C 00                           		CMP		AL,0			; ALが0 == msgを読みきった
   100 00007CB9 74 09                           		JE		fin				; JE:jump if equal
   101 00007CBB B4 0E                           		MOV		AH,0x0e			; 一文字表示ファンクション
   102 00007CBD BB 000F                         		MOV		BX,15			; カラーコード
   103 00007CC0 CD 10                           		INT		0x10			; ビデオBIOS呼び出し(INT:interrupt(割り込み))
   104 00007CC2                                 								; BIOS:basic input output system,基板のROMにあらかじめ書き込まれてある
   105 00007CC2                                 								; INTはBIOSの関数を呼ぶための命令(今回は0x10番目の命令を呼び出している)
   106 00007CC2 EB EE                           		JMP		putloop
   107 00007CC4                                 fin:
   108 00007CC4 F4                              		HLT						; 何かあるまでCPUを停止させる(halt)
   109 00007CC5 EB FD                           		JMP		fin				; 無限ループ
   110 00007CC7                                 msg:
   111 00007CC7 0A 0A                           		DB		0x0a, 0x0a		; 改行を2つ
   112 00007CC9 6C 6F 61 64 20 65 72 72 6F 72   		DB		"load error"
   113 00007CD3 0A                              		DB		0x0a			; 改行
   114 00007CD4 00                              		DB		0
   115 00007CD5                                 
   116 00007CD5 00 00 00 00 00 00 00 00 00 00   		RESB	0x7dfe-$		; 0x7dfeまでを0x00で埋める命令
       00007CDF 00 00 00 00 00 00 00 00 00 00 
       00007CE9 00 00 00 00 00 00 00 00 00 00 
       00007CF3 00 00 00 00 00 00 00 00 00 00 
       00007CFD 00 00 00 00 00 00 00 00 00 00 
       00007D07 00 00 00 00 00 00 00 00 00 00 
       00007D11 00 00 00 00 00 00 00 00 00 00 
       00007D1B 00 00 00 00 00 00 00 00 00 00 
       00007D25 00 00 00 00 00 00 00 00 00 00 
       00007D2F 00 00 00 00 00 00 00 00 00 00 
       00007D39 00 00 00 00 00 00 00 00 00 00 
       00007D43 00 00 00 00 00 00 00 00 00 00 
       00007D4D 00 00 00 00 00 00 00 00 00 00 
       00007D57 00 00 00 00 00 00 00 00 00 00 
       00007D61 00 00 00 00 00 00 00 00 00 00 
       00007D6B 00 00 00 00 00 00 00 00 00 00 
       00007D75 00 00 00 00 00 00 00 00 00 00 
       00007D7F 00 00 00 00 00 00 00 00 00 00 
       00007D89 00 00 00 00 00 00 00 00 00 00 
       00007D93 00 00 00 00 00 00 00 00 00 00 
       00007D9D 00 00 00 00 00 00 00 00 00 00 
       00007DA7 00 00 00 00 00 00 00 00 00 00 
       00007DB1 00 00 00 00 00 00 00 00 00 00 
       00007DBB 00 00 00 00 00 00 00 00 00 00 
       00007DC5 00 00 00 00 00 00 00 00 00 00 
       00007DCF 00 00 00 00 00 00 00 00 00 00 
       00007DD9 00 00 00 00 00 00 00 00 00 00 
       00007DE3 00 00 00 00 00 00 00 00 00 00 
       00007DED 00 00 00 00 00 00 00 00 00 00 
       00007DF7 00 00 00 00 00 00 00 
   117 00007DFE                                 
   118 00007DFE 55 AA                           		DB		0x55, 0xaa
   119 00007E00                                 
